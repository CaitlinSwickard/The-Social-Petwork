{"version":3,"sources":["context/auth.js","components/navbar/Navbar.jsx","dummyData.js","components/closeFriend/CloseFriend.jsx","components/leftbar/Leftbar.jsx","components/online/Online.jsx","components/rightbar/Rightbar.jsx","utils/mutations.js","utils/queries.js","utils/hooks.js","components/share/Share.jsx","components/PostCard/PostCard.js","components/feed/Feed.jsx","pages/feedpage/FeedPage.jsx","pages/loginpage/LoginPage.jsx","pages/registerpage/RegisterPage.jsx","components/conversations/Conversation.jsx","components/message/Message.jsx","components/chatOnline/ChatOnline.jsx","pages/messenger/Messenger.jsx","utils/AuthRoute.js","App.js","ApolloProvider.js","index.js"],"names":["initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","Navbar","useContext","console","log","PF","process","className","to","username","style","marginLeft","src","profilePicture","alt","textDecoration","placeholder","id","onClick","Users","CloseFriend","Leftbar","map","u","Online","Rightbar","useState","friends","setFriends","useEffect","getFriends","a","axios","get","_id","friendList","data","HomeRightbar","title","border","overflow","width","height","frameborder","allowTransparency","allow","ProfileRightbar","city","from","hoomans","friend","CREATE_POST_MUTATION","gql","DELETE_POST_MUTATION","LIKE_POST_MUTATION","UPDATE_POST_MUTATION","QUERY_POSTS","useForm","callback","values","setValues","onChange","event","target","name","onSubmit","preventDefault","Share","desc","useRef","file","setFile","createPost","body","useMutation","variables","update","proxy","result","readQuery","query","writeQuery","getPosts","onError","err","error","ref","URL","createObjectURL","Cancel","htmlFor","htmlColor","display","accept","e","files","PostCard","post","createdAt","likeCount","commentCount","likes","userLiked","document","querySelector","find","like","setLike","isLiked","setIsLiked","editing","setEditing","editedBody","setEditedBody","updateHandler","updatePost","postId","deleteError","refetchQueries","deletePost","likeError","onCompleted","likePost","updateError","Card","fluid","Content","Meta","moment","fromNow","Description","Form","Field","label","control","rows","Button","extra","as","labelPosition","color","basic","Icon","pointing","icon","size","Feed","useQuery","loading","FeedPage","LOGIN_USER","Login","context","errors","loginUser","password","_","history","push","noValidate","Input","primary","Object","keys","length","REGISTER_USER","Register","addUser","email","confirmPassword","register","Conversation","conversation","currentUser","Message","own","messageText","messageBottom","ChatOnline","onlineUsers","currentId","setCurrentChat","Messenger","messages","setMessages","m","tempObject","previousSibling","AuthRoute","Component","component","rest","render","App","path","exact","httpLink","createHttpLink","uri","authLink","setContext","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b02016b8.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport jwtDecode from \"jwt-decode\";\n\nconst initialState = {\n  user: null\n}\n\nif (localStorage.getItem(\"jwtToken\")) {\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem(\"jwtToken\");\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  login: (userData) => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action){\n  switch(action.type){\n    case \"LOGIN\":\n      return {\n        ...state,\n        user: action.payload\n      }\n    case \"LOGOUT\":\n      return {\n        ...state,\n        user: null\n      }\n    default: \n      return state;\n  }\n}\n\nfunction AuthProvider(props){\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  \n  function login(userData){\n    localStorage.setItem(\"jwtToken\", userData.token)\n    dispatch({\n      type: \"LOGIN\",\n      payload: userData\n    })\n  }\n\n  function logout(){\n    localStorage.removeItem(\"jwtToken\")\n    dispatch({ type: \"LOGOUT\" })\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ user: state.user, login, logout }}\n      {...props}\n      />\n  )\n}\n\nexport { AuthContext, AuthProvider }","import \"./navbar.css\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport PetsIcon from \"@mui/icons-material/Pets\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/auth\";\n\nexport default function Navbar() {\n  const { user, logout } = useContext(AuthContext);\n\n  console.log(user);\n\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  return (\n    <div className=\"navbarContainer\">\n       {user ? (\n           <div>\n           <Link to={`/profile/${user.username}`} style={{marginLeft: \"1.5rem\" }}>\n           <img\n             src={\n               user.profilePicture\n                 ? PF + user.profilePicture\n                 : PF + \"pet/dogcat.jpg\"\n             }\n             alt=\"profile-picture\"\n             className=\"navbarImg\"\n           />\n         </Link>\n         <span>{user.username}</span>\n         </div>\n       ) : (\n        <div></div>\n       )} \n      <div className=\"navbarLeft\">\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <span className=\"logo\">The Social Petwork</span>\n        </Link>\n      </div>\n      <div className=\"navbarCenter\">\n        <div className=\"searchbar\">\n          <SearchIcon className=\"searchIcon\" />\n          <input\n            placeholder=\"Search for new Furriends\"\n            className=\"searchInput\"\n          />\n        </div>\n      </div>\n      <div className=\"navbarRight\">\n        <div className=\"navbarIcons\">\n          <div className=\"navbarIconItem\">\n            <PetsIcon />\n            <span className=\"navbarIconBadge\">1</span>\n          </div>\n          <div className=\"navbarIconItem\">\n            <Link to=\"/messenger\">\n              <ChatIcon />\n            </Link>\n            <span className=\"navbarIconBadge\">2</span>\n          </div>\n          <div className=\"navbarIconItem\">\n            <NotificationsIcon />\n            <span className=\"navbarIconBadge\">1</span>\n          </div>\n        </div>\n        <div className=\"navbarlinks\">\n          {user ? (\n            <div>\n              <div>\n                <Link\n                  id=\"link\"\n                  to=\"/loginpage\"\n                  style={{ textDecoration: \"none\", marginLeft: \"5rem\" }}\n                  onClick={logout}\n                >\n                  Logout\n                </Link>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div>\n                <Link\n                  to=\"/loginpage\"\n                  style={{ textDecoration: \"none\" }}\n                  onClick={logout}\n                >\n                  Login\n                </Link>\n              </div>\n              <div>\n                <Link to=\"/registerpage\" style={{ textDecoration: \"none\" }}>\n                  Register\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const Users = [\n    {\n      id:1,\n      profilePicture: \"pet/pet1.jpg\",\n      username: \"Safak Kocaoglu\",\n    },\n    {\n      id:2,\n      profilePicture: \"pet/pet2.jpg\",\n      username: \"Janell Shrum\",\n    },\n    {\n      id:3,\n      profilePicture: \"pet/pet3.jpg\",\n      username: \"Alex Durden\",\n    },\n    {\n      id:4,\n      profilePicture: \"pet/pet8.jpg\",\n      username: \"Dora Hawks\",\n    },\n    {\n      id:5,\n      profilePicture: \"pet/pet9.jpg\",\n      username: \"Thomas Holden\",\n    },\n    {\n      id:6,\n      profilePicture: \"pet/pet10.jpg\",\n      username: \"Shirley Beauchamp\",\n    },\n    {\n      id:7,\n      profilePicture: \"pet/pet11.jpg\",\n      username: \"Travis Bennett\",\n    },\n    {\n      id:8,\n      profilePicture: \"pet/pet12.jpg\",\n      username: \"Kristen Thomas\",\n    },\n    {\n      id:9,\n      profilePicture: \"pet/pet13.jpg\",\n      username: \"Gary Duty\",\n    },\n    {\n      id:10,\n      profilePicture: \"pet/pet14.jpg\",\n      username: \"Safak Kocaoglu\",\n    },\n  ];\n  \n  export const Posts = [\n    {\n      id: 1,\n      desc: \"Love For All, Hatred For None.\",\n      photo: \"post/pet4.jpg\",\n      date: \"5 mins ago\",\n      userId: 1,\n      like: 32,\n      comment: 9,\n    },\n    {\n      id: 2,\n      photo: \"post/pet5.jpg\",\n      date: \"15 mins ago\",\n      userId: 2,\n      like: 2,\n      comment: 1,\n    },\n    {\n      id: 3,\n      desc: \"Every moment is a fresh beginning.\",\n      photo: \"post/pet7.jpg\",\n      date: \"1 hour ago\",\n      userId: 3,\n      like: 61,\n      comment: 2,\n    },\n    {\n      id: 4,\n      photo: \"post/pet15.jpg\",\n      date: \"4 hours ago\",\n      userId: 4,\n      like: 7,\n      comment: 3,\n    },\n    {\n      id: 5,\n      photo: \"post/pet16.jpg\",\n      date: \"5 hours ago\",\n      userId: 5,\n      like: 23,\n      comment: 5,\n    },\n    {\n      id: 6,\n      photo: \"post/pet17.jpg\",\n      date: \"1 day ago\",\n      userId: 6,\n      like: 44,\n      comment: 6,\n    },\n    {\n      id: 7,\n      desc: \"Never regret anything that made you smile.\",\n      photo: \"post/pet18.png\",\n      date: \"2 days ago\",\n      userId: 7,\n      like: 52,\n      comment: 3,\n    },\n    {\n      id: 8,\n      photo: \"post/pet19.jpg\",\n      date: \"3 days ago\",\n      userId: 8,\n      like: 15,\n      comment: 1,\n    },\n    {\n      id: 9,\n      desc: \"Change the world by being yourself.\",\n      photo: \"post/pet20.jpg\",\n      date: \"5 days ago\",\n      userId: 9,\n      like: 11,\n      comment: 2,\n    },\n    {\n      id: 10,\n      photo: \"post/pet21.jpg\",\n      date: \"1 week ago\",\n      userId: 10,\n      like: 104,\n      comment: 12,\n    },\n  ];","import \"./closeFriend.css\";\n\nexport default function CloseFriend({user}) {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  \n  return (\n    <li className=\"sidebarFriend\">\n      <img className=\"sidebarFriendImg\" src={PF+user.profilePicture} alt=\"\" />\n      <span className=\"sidebarFriendName\">{user.username}</span>\n    </li>\n  );\n}","import \"./leftbar.css\";\nimport RssFeedIcon from \"@mui/icons-material/RssFeed\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport PlayCircleIcon from \"@mui/icons-material/PlayCircle\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\nimport LiveHelpIcon from \"@mui/icons-material/LiveHelp\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport EventAvailableIcon from \"@mui/icons-material/EventAvailable\";\nimport SchoolIcon from \"@mui/icons-material/School\";\nimport { Users } from \"../../dummyData\";\nimport CloseFriend from \"../closeFriend/CloseFriend\";\n\nexport default function Leftbar() {\n  return (\n    <div className=\"leftbar\">\n      <div className=\"leftbarWrapper\">\n        <ul className=\"leftbarList\">\n          <li className=\"leftbarListItem\">\n            <RssFeedIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Feed</span>\n          </li>\n          <li className=\"leftbarListItem\">\n            <ChatIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Chats</span>\n          </li>\n          <li className=\"leftbarListItem\">\n            <PlayCircleIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Videos</span>\n          </li>\n          <li className=\"leftbarListItem\">\n            <GroupIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Groups</span>\n          </li>\n          <li className=\"leftbarListItem\">\n            <BookmarkBorderIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Bookmarks</span>\n          </li>\n          <li className=\"leftbarListItem\">\n            <LiveHelpIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Questions</span>\n          </li>\n          <li className=\"leftbarListItem\">\n            <WorkIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Jobs</span>\n          </li>\n          <li className=\"leftbarListItem\">\n            <EventAvailableIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Events</span>\n          </li>\n          <li className=\"leftbarListItem\">\n            <SchoolIcon className=\"leftbarIcon\" />\n            <span className=\"leftbarListItemText\">Courses</span>\n          </li>\n        </ul>\n        <button className=\"leftbarButton\">Show More</button>\n        <hr className=\"leftbarHr\" />\n        <ul className=\"leftbarFriendList\">\n          {Users.map((u) => (\n            <CloseFriend key={u.id} user={u} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}","import \"./online.css\";\n\nexport default function Online({user}) {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  return (\n    <li className=\"rightbarFriend\">\n      <div className=\"rightbarProfileImgContainer\">\n        <img className=\"rightbarProfileImg\" src={PF+user.profilePicture} alt=\"\" />\n        <span className=\"rightbarOnline\"></span>\n      </div>\n      <span className=\"rightbarUsername\">{user.username}</span>\n    </li>\n  );\n}","import \"./rightbar.css\";\nimport { Users } from \"../../dummyData\";\nimport Online from \"../online/Online\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth\";\nimport { Add, Remove } from \"@material-ui/icons\";\n\nexport default function Rightbar({ user }) {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [friends, setFriends] = useState([]);\n  const { user: currentUser, dispatch } = useContext(AuthContext);\n  // const [followed, setFollowed] = useState(\n  //   currentUser.followings.includes(user?.id)\n  // );\n\n  useEffect(() => {\n    // get friends for friend list (who is following who)\n    const getFriends = async () => {\n      try {\n        const friendList = await axios.get(\"/api/users/friends/\" + user._id);\n        setFriends(friendList.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getFriends();\n  }, [user]);\n\n  // click function for like/unlike following\n  // if you are following user, button should say unfollow \n  // if you dont follow the user the button will say follow\n  const handleClick = async () => {\n    try {\n      if (followed) {\n        await axios.put(`/api/users/${user._id}/unfollow`, {\n          userId: currentUser._id,\n        });\n        dispatch({ type: \"UNFOLLOW\", payload: user._id });\n      } else {\n        await axios.put(`/api/users/${user._id}/follow`, {\n          userId: currentUser._id,\n        });\n        dispatch({ type: \"FOLLOW\", payload: user._id });\n      }\n      setFollowed(!followed);\n    } catch (err) {\n    }\n  };\n\n  const HomeRightbar = () => {\n    return (\n      <>\n          <div className=\"widgets\">\n          <iframe\n            src=\"https://www.petco.com/shop/en/petcostore/category/top-deals/30-off-100\"\n            title=\"randomWidget\"\n            style={{ border: \"none\", overflow: \"hidden\", width: \"30rem\", height: \"25rem\" }}\n            height=\"100%\"\n            frameborder=\"0\"\n            allowTransparency=\"none\"\n            allow=\"encrypted-media\"\n          ></iframe>\n        </div>\n        <img className=\"rightbarAd\" src=\"assets/ad.png\" alt=\"\" />\n        <h4 className=\"rightbarTitle\">Online Friends</h4>\n        <ul className=\"rightbarFriendList\">\n          {Users.map((u) => (\n            <Online key={u.id} user={u} />\n          ))}\n        </ul>\n      </>\n    );\n  };\n\n  const ProfileRightbar = () => {\n    return (\n      <>\n      {/* button to follow/unfollow people */}\n            {/* {user.username !== currentUser.username && (\n          <button className=\"rightbarFollowButton\" onClick={handleClick}>\n            {followed ? \"Unfollow\" : \"Follow\"}\n            {followed ? <Remove /> : <Add />}\n          </button>\n        )} */}\n        <h4 className=\"rightbarTitle\">User information</h4>\n        <div className=\"rightbarInfo\">\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">City:</span>\n            <span className=\"rightbarInfoValue\">{user.city}</span>\n          </div>\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">From:</span>\n            <span className=\"rightbarInfoValue\">{user.from}</span>\n          </div>\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">Hoomans:</span>\n            <span className=\"rightbarInfoValue\">\n              {user.hoomans === 1 \n            ? \"1\" : user.hoomans === 2 \n            ? \"2\" \n            : \"-\"}\n            </span>\n          </div>\n        </div>\n        <h4 className=\"rightbarTitle\">User Furriends</h4>\n        <div className=\"rightbarFollowings\">\n          {friends.map((friend) => (\n            <Link\n              to={\"/profile/\" + friend.username}\n              style={{ textDecoration: \"none\" }}\n            >\n              <div className=\"rightbarFollowing\">\n                <img\n                  src={\n                    friend.profilePicture\n                      ? PF + friend.profilePicture\n                      : PF + \"pet/noAvatar.png\"\n                  }\n                  alt=\"\"\n                  className=\"rightbarFollowingImg\"\n                />\n                <span className=\"rightbarFollowingName\">{friend.username}</span>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"rightbar\">\n      <div className=\"rightbarWrapper\">\n        {user ? <ProfileRightbar /> : <HomeRightbar />}\n      </div>\n    </div>\n  );\n}","import { gql } from '@apollo/client';\n\nexport const CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!){\n    createPost(body: $body){\n      id\n      body\n      createdAt\n      username\n      likes{\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments{\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\n\nexport const DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!){\n    deletePost(postId: $postId)\n  }\n`;\n\nexport const LIKE_POST_MUTATION = gql`\n  mutation likePost($postId: ID!){\n    likePost(postId: $postId){\n      id\n    }\n  }\n`;\n\nexport const UPDATE_POST_MUTATION = gql`\n  mutation updatePost($postId: ID!, $body: String!){\n    updatePost(postId: $postId, body: $body){\n      id\n    }\n  }\n`;","import { gql } from '@apollo/client';\n\nexport const QUERY_POSTS = gql`\n  query {\n    getPosts{\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes{\n        username\n      }\n      commentCount\n      comments{\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n","import { useState } from \"react\";\n\nexport const useForm = (callback, initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n  \n  const onChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value })\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values\n  }\n}","import \"./share.css\";\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport LabelIcon from '@mui/icons-material/Label';\nimport InsertEmoticonIcon from '@mui/icons-material/InsertEmoticon';\nimport {Cancel} from \"@material-ui/icons\";\nimport { useContext, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/auth\";\nimport axios from \"axios\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_POST_MUTATION } from \"../../utils/mutations\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\nimport { useForm } from \"../../utils/hooks\";\n\n\nexport default function Share() {\n  const {user} = useContext(AuthContext);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const desc = useRef();\n  const [file, setFile] = useState(null);\n\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   // create a new post\n  //   const newPost = {\n  //     userId: user._id,\n  //     desc: desc.current.value,\n  //   };\n  //   // this uploads local photos to the new post and the form data entered\n  //   if (file) {\n  //     const data = new FormData();\n  //     const fileName = Date.now() + file.name;\n  //     data.append(\"name\", fileName);\n  //     data.append(\"file\", file);\n  //     newPost.img = fileName;\n  //     console.log(newPost);\n  //     try {\n  //       await axios.post(\"/api/upload\", data);\n  //       window.location.reload();\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   }\n  //   // reload page after new post\n  //   try {\n  //     await axios.post(\"/api/posts\", newPost);\n  //     window.location.reload();\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\n    body: \"\"\n  });\n\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: QUERY_POSTS,\n      });\n      proxy.writeQuery({\n        query: QUERY_POSTS,\n        data: {\n          getPosts: [result.data.createPost, ...data.getPosts],\n        },\n      });\n      values.body = \"\";\n    },\n    onError(err) { \n      return err;\n    },\n  });\n\n  function createPostCallback(){\n    createPost();\n  }\n\n  return (\n    <div className=\"share\">\n      <div className=\"shareWrapper\">\n        <div className=\"shareTop\">\n          <img className=\"shareProfileImg\" \n          src={\n            user?.profilePicture \n            ? PF + user.profilePicture\n            : PF + \"pet/dogcat.jpg\"}\n          alt=\"\" />\n          <input\n            placeholder={\"What's on your mind \" + user?.username + \"?\"}\n            className=\"shareInput\"\n            ref={desc}\n            onChange={onChange}\n            name=\"body\"\n          />\n        </div>\n        <hr className=\"shareHr\"/>\n        {/* to show image while creating a post before it is posted */}\n        {file && (\n          <div className=\"shareImgContainer\">\n            <img className=\"shareImg\" src={URL.createObjectURL(file)} alt=\"\" />\n            <Cancel className=\"shareCancelImg\" onClick={() => setFile(null)} />\n          </div>\n        )}\n        <form className=\"shareBottom\" onSubmit={onSubmit}>\n            <div className=\"shareOptions\">\n                <label htmlFor=\"file\" className=\"shareOption\">\n                    <PermMediaIcon htmlColor=\"tomato\" className=\"shareIcon\"/>\n                    <span className=\"shareOptionText\">Photo or Video</span>\n                    <input \n                    style={{display: \"none\"}}\n                    type=\"file\" \n                    id=\"file\" \n                    accept=\".png,.jpeg,.jpg\" \n                    onChange={(e) => setFile(e.target.files[0])}\n                      />\n                </label>\n                <div className=\"shareOption\">\n                    <LabelIcon htmlColor=\"blue\" className=\"shareIcon\"/>\n                    <span className=\"shareOptionText\">Tag</span>\n                </div>\n                <div className=\"shareOption\">\n                    <LocationOnIcon  htmlColor=\"green\" className=\"shareIcon\"/>\n                    <span className=\"shareOptionText\">Location</span>\n                </div>\n                <div className=\"shareOption\">\n                    <InsertEmoticonIcon htmlColor=\"goldenrod\" className=\"shareIcon\"/>\n                    <span className=\"shareOptionText\">Feelings</span>\n                </div>\n            </div>\n            <button className=\"shareButton\" type=\"submit\">Share</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { Button, Card, Icon, Label, Image, Form } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nimport { AuthContext } from \"../../context/auth\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\nimport { DELETE_POST_MUTATION, LIKE_POST_MUTATION, UPDATE_POST_MUTATION } from \"../../utils/mutations\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport \"./postcard.css\";\n\nfunction PostCard({ post: { body, createdAt, id, username, likeCount, commentCount, likes } }) {\n  const { user } = useContext(AuthContext);\n\n  const newBody = document.querySelector(\"#newBody\");\n\n  const userLiked = (likes.find(like => like?.username === user?.username)) ? true : false;\n\n  const [like, setLike] = useState(likeCount);\n  const [isLiked, setIsLiked] = useState(userLiked);\n\n  const likeHandler = () => {\n    setLike(isLiked ? like-1 : like+1);\n    setIsLiked(!isLiked);\n  }\n\n  const [editing, setEditing] = useState(false);\n  const [editedBody, setEditedBody] = useState(body);\n\n  function updateHandler(event) {\n    event.preventDefault();\n    if (editedBody !== body) {\n      updatePost();\n    }\n    setEditing(!editing);\n  }\n\n  const [deletePost, { deleteError }] = useMutation(DELETE_POST_MUTATION, {\n    variables: {\n      postId: id\n    },\n    onError(deleteError) { \n      return deleteError;\n    },\n    refetchQueries: [\n      QUERY_POSTS\n    ]\n  });\n  \n  const [likePost, { likeError }] = useMutation(LIKE_POST_MUTATION, {\n    variables: {\n      postId: id\n    },\n    onError(likeError) {\n      return likeError;\n    },\n    onCompleted(){\n      likeHandler();\n    }\n  });\n\n  const [updatePost, { updateError }] = useMutation(UPDATE_POST_MUTATION, {\n    variables: {\n      postId: id,\n      body: editedBody\n    },\n    onError(updateError) {\n      return updateError;\n    },\n    refetchQueries: [\n      QUERY_POSTS\n    ]\n  });\n\n  function onChange(event){\n    setEditedBody(event.target.value);\n  }\n\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Card.Meta>{moment(createdAt).fromNow()} by <span className=\"post-username\">{username}</span></Card.Meta>\n        {editing ? (\n        <Card.Description>\n          <Form>\n            <Form.Field label='Edit your post' control='textarea' rows='3' id=\"newBody\" value={editedBody} onChange={onChange} />\n            <Button onClick={updateHandler}>Submit</Button>\n          </Form>\n        </Card.Description>) : (\n          <Card.Description>{body}</Card.Description>\n        )}\n      </Card.Content>\n      <Card.Content extra>\n        <Button as='div' labelPosition='right' onClick={likePost}>\n          <Button color='teal' basic>\n            <Icon name='paw' />\n          </Button>\n          <Label basic color='teal' pointing='left'>\n            {like}\n          </Label>\n        </Button>\n        <Button as='div' labelPosition='right'>\n          <Button color='blue' basic>\n            <Icon name='comments' />\n          </Button>\n          <Label basic color='blue' pointing='left'>\n            {commentCount}\n          </Label>\n        </Button>\n        {user && user.username === username && (\n          <div>\n            <Button icon onClick={updateHandler}>\n              <Icon name=\"pencil\" size=\"small\"/>\n            </Button>\n            <Button icon onClick={deletePost}>\n              <Icon name=\"trash\" size=\"small\"/>\n            </Button>\n          </div>\n        )}\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default PostCard;","import React, { useContext, useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n// import {Navbar} from \"./navbar\"\n\nimport \"./feed.css\";\nimport Share from \"../share/Share\";\nimport Post from \"../post/Post\";\nimport PostCard from \"../PostCard/PostCard\";\nimport axios from \"axios\";\n// import { Posts } from \"../../dummyData\";\nimport { AuthContext } from \"../../context/auth\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\n\nfunction Feed() {\n// const [posts,setPosts] = useState([]);\n  // const {user} = useContext(AuthContext);\n  const { user } = useContext(AuthContext);\n\n// useEffect(()=> {\n\n  // const fetchPosts = async() => {\n  //   const res = user.username \n  //     ? await axios.get('/api/posts/profile/' + user.username)\n  //     : await axios.get('/api/posts/timeline/' + user._id);\n  //     // this sorts the posts in order from new first\n  //     setPosts(\n  //       res.data.sort((p1, p2) => {\n  //         return new Date(p2.createdAt) - new Date(p1.createdAt);\n  //       })\n  //     );\n  //   };\n  //   fetchPosts();\n  // }, [user.username, user._id]);\n\n  const { loading, error, data } = useQuery(QUERY_POSTS);\n\n  return (\n    // <Navbar/>\n\n    <div className=\"feed\">\n      <div className=\"feedWrapper\">\n        <Share />\n        {loading ? (\n          <h1>Loading posts...</h1>\n        ) : (\n          data.getPosts && data.getPosts.map((post) => (\n            <div key={post.id}>\n              <PostCard post={post} />\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Feed;","import \"./feedpage.css\"\nimport Navbar from \"../../components/navbar/Navbar\";\nimport Leftbar from \"../../components/leftbar/Leftbar\";\nimport Rightbar from \"../../components/rightbar/Rightbar\";\nimport Feed from \"../../components/feed/Feed\";\n\nexport default function FeedPage() {\n  return (\n    <>\n      <div className=\"homeContainer\">\n      <Leftbar />\n      <Feed />\n      <Rightbar />\n      </div>\n    </>\n  );\n}\n","// import \"./login.css\";\n// import { useRef, useContext } from \"react\";\n// import {loginCall } from \"../../apiCalls\";\n// import { AuthContext } from \"../../context/AuthContext\";\n// import { CircularProgress } from \"@material-ui/core\";\n\n// export default function LoginPage() {\n// const email = useRef();\n// const password = useRef();\n// const { user, isFetching, error, dispatch } = useContext(AuthContext);\n\n// const handleClick = (e) => {\n//   e.preventDefault();\n//   loginCall(\n//     { email: email.current.value, password: password.current.value }, \n//     dispatch);\n// }\n// // console.log(user);\n\n//   return (\n//     <div className=\"login\">\n//       <div className=\"loginWrapper\">\n//         <div className=\"loginLeft\">\n//           <h3 className=\"loginLogo\">The Social Pet Work</h3>\n//           <span className=\"loginDesc\">\n//             No Hoomans. Animals ONLY!! We ruuuleee!\n//           </span>\n//         </div>\n//         <div className=\"loginRight\">\n//         <form className=\"loginBox\" onSubmit={handleClick}>\n//             <input\n//               placeholder=\"Email\"\n//               type=\"email\"\n//               required\n//               className=\"loginInput\"\n//               ref={email}\n//             />\n//             <input\n//               placeholder=\"Password\"\n//               type=\"password\"\n//               required\n//               minLength=\"6\"\n//               className=\"loginInput\"\n//               ref={password}\n//             />\n//             <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>\n//               {isFetching ? (\n//                 <CircularProgress color=\"white\" size=\"20px\" />\n//               ) : (\n//                 \"Log In\"\n//               )}\n//             </button>\n//             <span className=\"loginForgot\">Forgot Password?</span>\n//             <button className=\"loginRegisterButton\">\n//               {isFetching ? (\n//                 <CircularProgress color=\"white\" size=\"20px\" />\n//               ) : (\n//                 \"Create a New Account\"\n//               )}\n//             </button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useContext, useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { AuthContext } from \"../../context/auth\";\nimport { useForm } from \"../../utils/hooks\";\n\nconst LOGIN_USER = gql`\n  mutation login(\n    $username: String!\n    $password: String!\n  ) {\n    login(\n      username: $username\n      password: $password\n    ) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nfunction Login(props) {\n  const context = useContext(AuthContext);\n  \n  const [errors, setErrors] = useState({});\n  \n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    username: \"\",\n    password: \"\"\n  });\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(_, { data: { login: userData }}){\n      context.login(userData);\n      props.history.push(\"/\");\n    },\n    onError(err){\n      console.log(\"ERR: \", err);\n      // setErrors(err.graphQLErrors[0].extensions.errors);\n    },\n    variables: values\n  });\n\n  function loginUserCallback(){\n    loginUser();\n  };\n\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\n        <h1>Login</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username\"\n          name=\"username\"\n          type=\"text\"\n          value={values.username}\n          error={errors.username ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          error={errors.password ? true : false}\n          onChange={onChange}\n        />\n        <Button type=\"submit\" primary>\n          Login\n        </Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map(value => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Login;","// import axios from \"axios\";\n// import { useRef } from \"react\";\n// import \"./register.css\";\n// import { useHistory } from \"react-router\";\n\n// export default function RegisterPage() {\n\n//   const username = useRef();\n//   const email = useRef();\n//   const password = useRef();\n//   const passwordAgain = useRef();\n//   const history = useHistory();\n\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     // making sure passwords match\n//     if(passwordAgain.current.value !== password.current.value){\n//       password.current.setCustomValidity(\"Passwords don't match\");\n//     } else {\n//       const user = {\n//         username: username.current.value, \n//         email: email.current.value, \n//         password: password.current.value,\n//       };\n//       try{\n//         const res = await axios.post('/api/auth/registerpage', user);\n//         // this will direct the user back to the login page after registering\n//         history.push('/loginpage');\n//       } catch (err){\n//         console.log(err);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"login\">\n//       <div className=\"loginWrapper\">\n//         <div className=\"loginLeft\">\n//           <h3 className=\"loginLogo\">The Social Pet Work</h3>\n//           <span className=\"loginDesc\">\n//             Connect with friends and the world around you on The Social Pet Work.\n//           </span>\n//         </div>\n//         <div className=\"loginRight\">\n//           <form className=\"loginBox\" onSubmit={handleClick}>\n//             <input\n//               placeholder=\"Username\"\n//               required\n//               ref={username}\n//               className=\"loginInput\"\n//             />\n//             <input\n//               placeholder=\"Email\"\n//               required\n//               ref={email}\n//               className=\"loginInput\"\n//               type=\"email\"\n//             />\n//             <input\n//               placeholder=\"Password\"\n//               required\n//               ref={password}\n//               className=\"loginInput\"\n//               type=\"password\"\n//               minLength=\"6\"\n//             />\n//             <input\n//               placeholder=\"Password Again\"\n//               required\n//               ref={passwordAgain}\n//               className=\"loginInput\"\n//               type=\"password\"\n//             />\n//             <button className=\"loginButton\" type=\"submit\">\n//               Sign Up\n//             </button>\n//             <button className=\"loginRegisterButton\">Log into Account</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useContext, useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { AuthContext } from \"../../context/auth\";\nimport { useForm } from \"../../utils/hooks\";\n\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nfunction Register(props) {\n  const context = useContext(AuthContext);\n  \n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(_, { data: { register: userData}}){\n      console.log(userData);\n      context.login(userData);\n      props.history.push(\"/\");\n    },\n    onError(err){\n      console.log(\"ERR: \", err);\n      // setErrors(err);\n    },\n    variables: values\n  });\n\n  function registerUser(){\n    addUser();\n  }\n\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\n        <h1>Register</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username\"\n          name=\"username\"\n          type=\"text\"\n          value={values.username}\n          error={errors.username ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Email\"\n          placeholder=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          error={errors.email ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          error={errors.password ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Confirm password\"\n          placeholder=\"Confirm password\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={values.confirmPassword}\n          error={errors.confirmPassword ? true : false}\n          onChange={onChange}\n        />\n        <Button type=\"submit\" primary>\n          Register\n        </Button>\n      </Form>\n      {/* {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map(value => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )} */}\n    </div>\n  )\n}\n\nexport default Register;","// import axios from \"axios\";\nimport { useEffect, useState } from \"react\"\nimport \"./conversation.css\"\n\nexport default function Conversation({conversation,currentUser}) {\n    // const [user,setUser] =useState(null)\n    // const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n\n    // useEffect(()=>{\n    //     const friendId = conversation.member.find(m=>m !== currentUser._id)\n    //     const getUser = async ()=>{\n    //         try {\n    //             const res = await axios(\"/users?userId=\" + friendId);\n    //             setUser(res.data);\n    //           } catch (err) {\n    //             console.log(err);\n    //           }\n    //         };\n    //         getUser();\n    //       }, [currentUser, conversation]);\n        \n\n\n    return (\n        <div className = \"conversation\">\n            <img className = \"conversationImg\" \n            //  src={\n            //     user?.profilePicture\n            //       ? PF + user.profilePicture\n            //       : PF + \"person/noAvatar.png\"\n            //   }\n            src = \"../../assets/pet.png\" \n            alt= \"\"/>\n            <span className =\" conversationName\">Jhon Doe </span>\n        </div>\n    )\n}\n\n","import Messenger from \"../../pages/messenger/Messenger\"\nimport \"./message.css\"\n\n\nexport default function Message({own,messageText, messageBottom}) {\n    return (\n        <div className = {own ? \"message own\" : \"message\" }>\n            <div className =\"messageTop\">\n                <img className = \"messageImg\"\n                 src =\"../../assets/pet.png\" alt= \"\"/>\n                <p className =\"messageText\">{messageText} </p>\n            </div>\n            <div className = \"messageBottom\">{messageBottom}</div>\n        </div>\n    )\n}\n","// import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./chatOnline.css\";\n\nexport default function ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\n//   const [friends, setFriends] = useState([]);\n//   const [onlineFriends, setOnlineFriends] = useState([]);\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n//   useEffect(() => {\n//     const getFriends = async () => {\n//       const res = await axios.get(\"/users/friends/\" + currentId);\n//       setFriends(res.data);\n//     };\n\n//     getFriends();\n//   }, [currentId]);\n\n//   useEffect(() => {\n//     setOnlineFriends(friends.filter((f) => onlineUsers.includes(f._id)));\n//   }, [friends, onlineUsers]);\n\n//   const handleClick = async (user) => {\n//     try {\n//       const res = await axios.get(\n//         `/conversations/find/${currentId}/${user._id}`\n//       );\n//       setCurrentChat(res.data);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   }\n    return (\n        <div className = \"chatOnline\">\n            {/* {onlineFriends.map((o) => ( */}\n            <div className =\"chatOnlineFriend\">\n                <div className = \"chatOnlineImgContainer\" \n                // onClick={() => handleClick(o)}\n                >\n                    <img className =\"chatOnlineImg\"\n                    //  src={\n                    //     o?.profilePicture\n                    //       ? PF + o.profilePicture\n                    //       : PF + \"person/noAvatar.png\"\n                    //   }\n\n\n                    src =\"../../assets/pet.png\" alt=\"\"\n                    />\n                    <div className= \"chatOnlineBadge\">   </div>\n                    </div>\n                    <span className= \"chatOnlineName\">FINLEY\n                    \n                    {/* {o?.username} */}\n                    </span>\n                    \n               </div>\n                {/* ))} */}\n           </div>\n           \n );\n}\n","import './messenger.css'\nimport Navbar from \"../../components/navbar/Navbar\"\nimport Conversation from '../../components/conversations/Conversation'\nimport Message from '../../components/message/Message'\nimport ChatOnline from '../../components/chatOnline/ChatOnline'\nimport { useEffect, useState } from \"react\"\n// import { AuthContext } from \"../../context/AuthContext\"\n// import axios form \"axios\";\n// import { io } from \"socket.io-client\"\n\nexport default function Messenger() {\n    // const [conversations, setConversations] = useState([]);\n    // const [currentChat, setCurrentChat] = useState(null);\n    // const [messages, setMessages] = useState([]);\n    // const [newMessage, setNewMessage] = useState(\"\");\n    // const [arrivalMessage, setArrivalMessage] = useState(null);\n    // const [onlineUsers, setOnlineUsers] = useState([]);\n    // const socket = useRef();\n    // const { user } = useContext(AuthContext);\n    // const scrollRef = useRef();\n\n    // useEffect(() => {\n    //     socket.current = io(\"ws://localhost:8900\");\n    //     socket.current.on(\"getMessage\", (data) => {\n    //       setArrivalMessage({\n    //         sender: data.senderId,\n    //         text: data.text,\n    //         createdAt: Date.now(),\n    //       });\n    //     });\n    //   }, []);\n\n    // useEffect(() => {\n    //     arrivalMessage &&\n    //       currentChat?.members.includes(arrivalMessage.sender) &&\n    //       setMessages((prev) => [...prev, arrivalMessage]);\n    //   }, [arrivalMessage, currentChat]);\n\n    //   useEffect(() => {\n    //     socket.current.emit(\"addUser\", user._id);\n    //     socket.current.on(\"getUsers\", (users) => {\n    //       setOnlineUsers(\n    //         user.followings.filter((f) => users.some((u) => u.userId === f))\n    //       );\n    //     });\n    //   }, [user]);\n\n    //   useEffect(() => {\n    //     const getConversations = async () => {\n    //       try {\n    //         const res = await axios.get(\"/conversations/\" + user._id);\n    //         setConversations(res.data);\n    //       } catch (err) {\n    //         console.log(err);\n    //       }\n    //     };\n    //     getConversations();\n    //   }, [user._id]);\n\n    //   useEffect(() => {\n    //     const getMessages = async () => {\n    //       try {\n    //         const res = await axios.get(\"/messages/\" + currentChat?._id);\n    //         setMessages(res.data);\n    //       } catch (err) {\n    //         console.log(err);\n    //       }\n    //     };\n    //     getMessages();\n    //   }, [currentChat]);\n\n    //   const handleSubmit = async (e) => {\n    //     e.preventDefault();\n    //     const message = {\n    //       sender: user._id,\n    //       text: newMessage,\n    //       conversationId: currentChat._id,\n    //     };\n\n    //     const receiverId = currentChat.members.find(\n    //       (member) => member !== user._id\n    //     );\n\n    //     socket.current.emit(\"sendMessage\", {\n    //       senderId: user._id,\n    //       receiverId,\n    //       text: newMessage,\n    //     });\n\n    //     try {\n    //       const res = await axios.post(\"/messages\", message);\n    //       setMessages([...messages, res.data]);\n    //       setNewMessage(\"\");\n    //     } catch (err) {\n    //       console.log(err);\n    //     }\n    //   };\n\n    //   useEffect(() => {\n    //     scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    //   }, [messages]);\n    const [messages, setMessages] = useState([\n        {\n            messageText:\"BARK BARK\",\n            messageBottom: \"1 hour ago\",\n        }\n    ])\n\n    const handleClickSend = (e) => {\n       \n        const tempObject = {\n            messageText: e.target.previousSibling.value,\n            messageBottom: \"1 hour ago\",\n        }\n        setMessages(\n            [...messages, tempObject]\n        );\n    }\n\n    return (\n        <>\n\n\n            <div className=\"messenger\">\n                <div className=\"chatMenu\" >\n                    <div className=\"chatMenuWrapper\">\n                        <input placeholder=\"Search for amigos\" className=\"chatMenuInput\" />\n                        {/* {conversations.map((c) => (\n                            <div onClick={() => setCurrentChat(c)}>\n                                <Conversation conversation={c} currentUser={user} />\n                            </div>\n                        ))} */}\n                        <Conversation/>\n                    </div>\n                </div>\n                <div className=\"chatBox\" >\n                    <div className=\"chatboxWrapper\">\n                        <div className=\"chatBoxTop\">\n                        \n                        {messages.map((m) => (\n                    <div key={m.messageText}>\n                      <Message messageText={m.messageText} messageBottom={m.messageBottom} />\n                    </div>\n                  ))}\n\n                        </div>\n                        <div className=\"chatBoxBottom\">\n                            <textarea className=\"chatMessageInput\" placeholder=\"communicate something\"></textarea>\n                            <button className=\"chatSend\" onClick={handleClickSend} >SEND</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chatOnline\" >\n                    <div className=\"chatOnlineWrapper\">\n                    {/* <ChatOnline\n              onlineUsers={onlineUsers}\n              currentId={user._id}\n              setCurrentChat={setCurrentChat}\n                    */}\n                        <ChatOnline />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { AuthContext } from \"../context/auth\";\n\nfunction AuthRoute({ component: Component, ...rest }){\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={props => \n        user ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  )\n}\n\nexport default AuthRoute;","// import React from 'react';\n// import {\n//   ApolloClient,\n//   InMemoryCache,\n//   ApolloProvider,\n//   createHttpLink,\n// } from '@apollo/client';\n// import { setContext } from '@apollo/client/link/context';\n// import { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\n// import Home from './pages/Home';\n// import Profile from './pages/Profile';\n// import Signup from './pages/Signup';\n// import Login from './pages/Login';\n// import Header from './components/Header';\n// import Footer from './components/Footer';\n// import FeedPage from './pages/feedpage/FeedPage';\n// import Messenger from './pages/messenger/Messenger';\n// import ProfilePage from './pages/profilepage/ProfilePage';\n// import LoginPage from './pages/loginpage/LoginPage';\n// import RegisterPage from './pages/registerpage/RegisterPage';\n\n// const httpLink = createHttpLink({\n//   uri: 'http://localhost:3001/graphql',\n// });\n\n// const authLink = setContext((_, { headers }) => {\n//   // get the authentication token from local storage if it exists\n//   const token = localStorage.getItem('id_token');\n//   // return the headers to the context so httpLink can read them\n//   return {\n//     headers: {\n//       ...headers,\n//       authorization: token ? `Bearer ${token}` : '',\n//     },\n//   };\n// });\n\n// const client = new ApolloClient({\n//   link: authLink.concat(httpLink),\n//   cache: new InMemoryCache(),\n// });\n\n// const { user } = useContext(AuthContext)\n\n// function App() {\n\n//   const { user } = useContext(AuthContext)\n//   return (\n//     <ApolloProvider client={client}>\n//       <Router>\n//         <div className=\"flex-column justify-flex-start min-100-vh\">\n//           {/* <Header /> */}\n//           <div className=\"container\">\n//             <Route exact path=\"/\">\n//               <Home />\n//             </Route>\n//             <Route exact path=\"/login\">\n//               <Login />\n//             </Route>\n//             <Route exact path=\"/signup\">\n//               <Signup />\n//             </Route>\n//             <Route exact path=\"/me\">\n//               <Profile />\n//             </Route>\n//             <Route exact path=\"/profiles/:profileId\">\n//               <Profile />\n//             </Route>\n//             {/* these are all the pages we added outside the boiler plate */}\n//             <Route exact path=\"/feedpage\">\n//               {user ? <FeedPage /> : <RegisterPage />}\n//             </Route>\n//             <Route exact path=\"/messenger\">\n//               <Messenger />\n//             </Route>\n//             <Route exact path=\"/profilepage\">\n//               <ProfilePage />\n//             </Route>\n//             <Route exact path=\"/loginpage\">\n//               {user ? <Redirect to='/feedpage' /> : <LoginPage />}\n//             </Route>\n//             <Route exact path=\"/registerpage\">\n//               <RegisterPage />\n//             </Route>\n//           </div>\n//           {/* <Footer /> */}\n//         </div>\n//       </Router>\n//     </ApolloProvider>\n//   );\n// }\n\n// export default App;\n\n\nimport FeedPage from \"./pages/feedpage/FeedPage\";\nimport Login from \"./pages/loginpage/LoginPage\";\nimport ProfilePage from \"./pages/profilepage/ProfilePage\";\nimport Register from \"./pages/registerpage/RegisterPage\";\nimport Messenger from './pages/messenger/Messenger';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext, AuthProvider } from \"./context/auth\";\nimport AuthRoute from \"./utils/AuthRoute\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nfunction App() {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          {/* <Route exact path=\"/\">\n            {user ? <FeedPage /> : <RegisterPage />}\n          </Route>\n          <Route path=\"/loginpage\">\n            {user ? <Redirect to=\"/\" /> : <LoginPage />}\n          </Route>\n          <Route path=\"/registerpage\">\n            {user ? <Redirect to=\"/\" /> : <RegisterPage />}\n            <RegisterPage />\n          </Route>\n          <Route path=\"/profile/:username\">\n            <ProfilePage />\n          </Route> */}\n          <Route path=\"/messenger\">\n         \n          </Route>\n        </Switch>\n        <Navbar />\n        \n        <Route exact path=\"/\" component={FeedPage} />\n        <Route exact path=\"/messenger\" component={Messenger} />\n        <AuthRoute exact path=\"/loginpage\" component={Login} />\n        <AuthRoute exact path=\"/registerpage\" component={Register} />\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport App from \"./App\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:3001/graphql\"\n});\n\nconst authLink = setContext(() => {\n  const token = localStorage.getItem(\"jwtToken\");\n  return {\n    headers: {\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from \"./context/auth\";\nimport ApolloProvider from \"./ApolloProvider\";\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <AuthContextProvider>\n//       <App />\n//     </AuthContextProvider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  ApolloProvider,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}